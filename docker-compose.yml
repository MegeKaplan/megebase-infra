services:
  postgres:
    image: postgres:latest
    container_name: megebase_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - megebase_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: megebase_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - megebase_network
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:3-management
    container_name: megebase_rabbitmq
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - megebase_network

  redis:
    image: redis:7.4.5-alpine
    container_name: megebase_redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - megebase_network
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  minio:
    image: minio/minio:latest
    container_name: megebase_minio
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - megebase_network
    command: server /data --console-address ":9001"

  megebase-identity-service:
    build:
      context: ../megebase-identity-service
      dockerfile: Dockerfile
    container_name: megebase_identity_service
    ports:
      - "${MEGEBASE_IDENTITY_SERVICE_PORT}:8080"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    volumes:
      - ../megebase-identity-service/.env:/app/.env
    networks:
      - megebase_network

  megebase-notification-service:
    build:
      context: ../megebase-notification-service
      dockerfile: Dockerfile
    container_name: megebase_notification_service
    depends_on:
      - rabbitmq
    volumes:
      - ../megebase-notification-service/.env:/app/.env
    networks:
      - megebase_network

  megebase-api-gateway:
    build:
      context: ../megebase-api-gateway
      dockerfile: Dockerfile
    container_name: megebase_api_gateway
    ports:
      - "${MEGEBASE_API_GATEWAY_PORT}:8080"
    depends_on:
      - megebase-identity-service
    volumes:
      - ../megebase-api-gateway/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ../megebase-api-gateway/conf.d:/etc/nginx/conf.d
      - ../megebase-api-gateway/lua:/usr/local/openresty/lua
    environment:
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - megebase_network

volumes:
  postgres_data:
  pgadmin_data:
  rabbitmq_data:
  redis_data:
  minio_data:

networks:
  megebase_network:
    external: true